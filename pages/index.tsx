import Head from 'next/head'
import { Inter } from 'next/font/google'


const inter = Inter({ subsets: ['latin'] })

import Nav from "../components/Nav";
import Board from "../components/Board";
import { Container } from '@/components/Container';
import Icon from "../components/Icon";
import Search from '../components/Search';

import { styled } from '@stitches/react';

import players from '@/players';

const Title = styled('title', {
  display: 'block',
  fontSize: '2rem',
  color: 'white',
  fontWeight: 'bold',
  margin: '0 auto',
  paddingTop: '70px',
  paddingBottom: '70px',
});

const Content = styled('div', {
  display: 'flex',
  position: 'relative',
  width: '100%',
  marginTop: '80px',
});

const ContentOverlay = styled('div', {
  position: 'absolute',
  top: '0',
  left: '0',
  zIndex: '-1',
  backgroundColor: '#2c1159',
  height: '330px',
  width: '100%',
  borderRadius: '51% 49% 49% 51% / 0% 0% 100% 100%',
});

const Effect = styled('div', {
  position: 'absolute',
  width: '100%',
  height: '50vh',
  top: '80px',
  background: 'repeating-linear-gradient(to right, transparent, transparent 20px, black 20px,black 21px)',
});

const FlexItem = styled("div", {
  backgroundColor: '#251e40',
  borderRadius: '7px',
  borderStyle: 'solid',
  borderColor: 'rgb(61 45 126)',
  borderWidth: '1px',
  height: '50px',
  paddingLeft: '15px',
  paddingRight: '15px',
  variants: {
    cursor: {
      pointer: {
        cursor: 'pointer'
      }
    },
    display: {
      flex: {
        display: 'flex',
      },
    },
    items: {
      center: {
        alignItems: 'center',
      }
    }
  },
});


const Row = styled("div", {
  display: 'flex',
  alignItems: 'center',
  variants: {
    direction: {
      column: {
        flexDirection: 'column',
      },
      row: {
        flexDirection: 'row'
      },
    },
    gap: {
      sm: {
        gap: '10px'
      }
    }
  },
});



const GridWrapper = styled('div', {
  position: 'absolute',
  width: '100%',
  height: '100%',
  left: '0px',
  bottom: '0px',
  perspective: '200px',
  zIndex: '100'
});

const Grid = styled('div', {
  position: 'absolute',
  top: '0px',
  left: '0px',
  right: '0px',
  bottom: '0px',
  width: '100%',
  height: '100%',
  marginTop: '-50px',
  transform: 'rotateX(45deg)'
});
const Vertical = styled('div', {
});
const VerticalLine = styled('div', {
  position: 'absolute',
  backgroundColor: 'rgba(87, 193, 232, 0.35)',
  backfaceVisibility: 'hidden',
  top: '0px',
  left: '0px',
  bottom: '0px',
  width: '5px',
  backgroundImage: 'linear-gradient(top, rgba(255,255,255,0), rgba(87, 193, 232, 0.35))',
  "&::nth-child(1)": {
    left: '10%',
  },
  "&::nth-child(2)": {
    left: '20%',
  },
  "&::nth-child(3)": {
    left: '30%',
  },
  "&::nth-child(4)": {
    left: '40%',
  },
});
const Horizontal = styled('div', {
});
const HorizontalLine = styled('div', {
  position: 'absolute',
  backgroundColor: 'rgba(87, 193, 232, 0.35)',
  backfaceVisibility: 'hidden',
  top: '0px',
  left: '0px',
  right: '0px',
  height: '5px',
  "&::nth-child(1)": {
    top: '10%',
    opacity: '0.2'
  },
  "&::nth-child(2)": {
    top: '20%',
    opacity: '0.3'
  },
  "&::nth-child(3)": {
    top: '30%',
    opacity: '0.4'
  },
  "&::nth-child(4)": {
    top: '40%',
    opacity: '0.5'
  },
});


export default function Home() {
  return (
    <>
      <Head>
        <title>Leaderboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Nav />


      <div className="grid-wrapper">
  <div className="grid">
    <div className="vertical">
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
    </div>
    <div className="horizontal">
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
      <div className="line"></div>
    </div>
  </div>
</div>

{/* 
      <GridWrapper>
        <Grid>
          <Vertical>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
            <VerticalLine></VerticalLine>
          </Vertical>
          <Horizontal>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
            <HorizontalLine></HorizontalLine>
          </Horizontal>
        </Grid>
      </GridWrapper>
  */}
      




       <Content>
        <ContentOverlay>
        </ContentOverlay>
        <Title>
            Leaderboard
          </Title>
      </Content>
  

      <Container>

          <Row direction="row" gap="sm">
            <Search data={players} />
            <FlexItem display="flex" items="center" cursor="pointer">
              <Icon name="layers" viewBox='0 0 512 512' size={"24"}  />
            </FlexItem>
          </Row>






        <Board />
      </Container>
    </>
  )
}
